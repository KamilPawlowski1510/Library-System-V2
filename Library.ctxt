#BlueJ class context
comment0.target=Library
comment0.text=\r\n\ Used\ as\ a\ collection\ class\ for\ both\ patrons\ and\ books\r\n\r\n\ @author\ Kamil\ Pawlowski\r\n\ @version\ 2\r\n
comment1.params=
comment1.target=Library()
comment1.text=\r\n\ Constructs\ objects\ of\ class\ Library\r\n
comment10.params=choice
comment10.target=java.lang.String\ listOfPatrons(int)
comment10.text=\r\n\ Creates\ a\ String\ that\ represents\ all\ the\ Patrons\ in\ Patron\ List\ or\ a\ \r\n\ particular\ subclass\ depending\ on\ choice\r\n
comment11.params=choice
comment11.target=java.lang.String\ listOfBooks(int)
comment11.text=\r\n\ Creates\ a\ String\ that\ represents\ all\ the\ Books\ in\ Book\ List\ or\ a\ \r\n\ particular\ subclass\ depending\ on\ choice\r\n
comment12.params=nameIn
comment12.target=java.lang.String\ searchPatronByName(java.lang.String)
comment12.text=\r\n\ Takes\ in\ a\ String\ input\ and\ searches\ the\ Patron\ List\ for\ Patrons\ \r\n\ with\ the\ same\ Name\ and\ returns\ this\ as\ a\ String\r\n
comment13.params=nameIn
comment13.target=java.lang.String\ searchBookByTitle(java.lang.String)
comment13.text=\r\n\ Takes\ in\ a\ String\ input\ and\ searches\ the\ Book\ List\ for\ Books\ with\r\n\ the\ same\ Title\ and\ returns\ this\ as\ a\ String\r\n
comment14.params=index
comment14.target=Patron\ getPatron(int)
comment14.text=\r\n\ Gets\ Patron\r\n\r\n\ @param\ \ \ \ \ \ int\ index\r\n\ @return\ \ \ \ Patron\ patron\r\n
comment15.params=index
comment15.target=Book\ getBook(int)
comment15.text=\r\n\ Gets\ Book\r\n\r\n\ @param\ \ \ \ \ \ int\ index\r\n\ @return\ \ \ \ Book\ book\r\n
comment16.params=
comment16.target=java.lang.String\ listAvailableBooks()
comment16.text=\r\n\ Makes\ a\ list\ of\ every\ Book\ in\ the\ Book\ List\ that\ is\ Available\r\n
comment17.params=IDIn
comment17.target=boolean\ validifyBookID(java.lang.String)
comment17.text=\r\n\ Checks\ whether\ or\ not\ a\ book\ ID\ is\ valid.\ This\ is\ done\ by\ comparing\r\n\ its\ ID\ with\ every\ Book\ ID\ in\ the\ Book\ List\ and\ seeing\ if\ it\ already\r\n\ occured\ somewhere\r\n
comment18.params=IDIn
comment18.target=void\ returnBook(java.lang.String)
comment18.text=\r\n\ Returns\ a\ book.\ Takes\ the\ inserted\ ID\ and\ compares\ it\ with\ the\ ID's\ of\r\n\ all\ Books\ in\ Book\ List.\ When\ it\ finds\ one\ that\ has\ the\ same\ ID\ it\ changes\r\n\ its\ avail\ to\ true.\r\n
comment19.params=
comment19.target=int\ numberOfAvailBooks()
comment19.text=\r\n\ Counts\ how\ many\ Available\ Books\ there\ are\ in\ the\ Book\ List\r\n
comment2.params=patron1
comment2.target=void\ addPatron(Patron)
comment2.text=\r\n\ Adds\ a\ new\ Patron\ to\ the\ Patron\ List\r\n
comment20.params=
comment20.target=void\ loadPatron()
comment20.text=\r\n\ Loads\ the\ patrons.xml\ file\r\n
comment21.params=
comment21.target=void\ loadBook()
comment21.text=\r\n\ Loads\ the\ books.xml\ file\r\n
comment22.params=
comment22.target=void\ savePatron()
comment22.text=\r\n\ Saves\ the\ data\ onto\ the\ patrons.xml\ file\r\n
comment23.params=
comment23.target=void\ saveBook()
comment23.text=\r\n\ Saves\ the\ data\ onto\ the\ books.xml\ file\r\n
comment3.params=book1
comment3.target=void\ addBook(Book)
comment3.text=\r\n\ Adds\ a\ new\ Book\ to\ the\ Book\ List\r\n
comment4.params=index
comment4.target=void\ removePatron(int)
comment4.text=\r\n\ Removes\ a\ Patron\ from\ the\ Patron\ List\r\n
comment5.params=index
comment5.target=void\ removeBook(int)
comment5.text=\r\n\ Removes\ a\ Book\ from\ the\ Book\ List\r\n
comment6.params=
comment6.target=int\ numberOfPatrons()
comment6.text=\r\n\ Returns\ how\ many\ Patrons\ there\ are\ in\ the\ Patron\ List\r\n
comment7.params=
comment7.target=int\ numberOfBooks()
comment7.text=\r\n\ Returns\ how\ many\ Books\ there\ are\ in\ the\ Book\ List\r\n
comment8.params=type
comment8.target=int\ numberOfPatronType(java.lang.String)
comment8.text=\r\n\ Returns\ how\ many\ Patrons\ there\ are\ of\ a\ particular\ subclass\ in\ the\ Patron\ List\r\n
comment9.params=type
comment9.target=int\ numberOfBookType(java.lang.String)
comment9.text=\r\n\ Returns\ how\ many\ Books\ there\ are\ of\ a\ particular\ subclass\ in\ the\ Book\ List\r\n
numComments=24
